
autmated _tap adcpwm tap 328p project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000038c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000410  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000450  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007b2  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e8  00000000  00000000  00000c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ea  00000000  00000000  00001322  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f1  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000004b  00000000  00000000  00001a51  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6d 00 	call	0xda	; 0xda <main>
  78:	0c 94 c4 01 	jmp	0x388	; 0x388 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <adc_init>:
#define feedback_port PORTD

//functions declaration

void adc_init(void){
	DDRC&=(0x00);//MAKE PC0 AS INPUT
  80:	87 b1       	in	r24, 0x07	; 7
  82:	17 b8       	out	0x07, r1	; 7
	ADMUX=(1<<REFS0);//SELECT AVCC AS INPUT,RIGHT ADJUST RESULT
  84:	80 e4       	ldi	r24, 0x40	; 64
  86:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA=(1<<ADEN)|(1<<ADIE)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);//ENABLED ADC,ENABLE INTERRUPT,SELECTE 128 PERSCALER
  8a:	8f e8       	ldi	r24, 0x8F	; 143
  8c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  90:	08 95       	ret

00000092 <adc_read>:
	
}
//ADC RED FUNCTION
int adc_read(int channel){
	ADMUX|=((0X0F&ADMUX)|channel);//ACTIVATING THE FIRST FOUR CHANNELS
  92:	ec e7       	ldi	r30, 0x7C	; 124
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	20 81       	ld	r18, Z
  98:	30 81       	ld	r19, Z
  9a:	2f 70       	andi	r18, 0x0F	; 15
  9c:	82 2b       	or	r24, r18
  9e:	83 2b       	or	r24, r19
  a0:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADSC);
  a2:	ea e7       	ldi	r30, 0x7A	; 122
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	80 64       	ori	r24, 0x40	; 64
  aa:	80 83       	st	Z, r24
	while(ADCSRA&(1<<ADIF));//WAIT TILL CO9NVERSION IS COMPLETE
  ac:	80 81       	ld	r24, Z
  ae:	84 fd       	sbrc	r24, 4
  b0:	fd cf       	rjmp	.-6      	; 0xac <adc_read+0x1a>
	return ADCW;
  b2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  b6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  ba:	08 95       	ret

000000bc <pwm_init_tmr1>:
// 	TCCR0B=(1<<CS00);//no prescling
// 	
// }
//PWM INITILAIZE TIMER 1 16 BIT TIMER 
void pwm_init_tmr1(void){
	DDRB=(1<<PB1);//SET OC1A AS OUTPUT
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	84 b9       	out	0x04, r24	; 4
	TCCR1A=(1<<WGM11)|(1<<COM1A1);//SET A FAST PWM,TOP IN ICR1,NON-INVERTING MODE
  c0:	82 e8       	ldi	r24, 0x82	; 130
  c2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	/*TCCR1B=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS10);//TOP IN ICR1,CLK/64*/
	TCCR1B=(1<<WGM12)|(1<<WGM13)|(1<<CS10);//TOP IN ICR1,no prescaling 
  c6:	89 e1       	ldi	r24, 0x19	; 25
  c8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	//FPWM=F(OSC)/(N*(1+TOP)).WHERE N PRESCALER DIVIDER=16000000/(64*(1+)
	//TOP=39999..PS1--319999 PS64-4999 PS256-1249
	/*TCNT1=4499;*/
	/*TCNT1=0;*/
	
	ICR1=20000;
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	9e e4       	ldi	r25, 0x4E	; 78
  d0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  d4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  d8:	08 95       	ret

000000da <main>:
}

int main(void)
{
	/*pwm_init();*/
	feedback_DIR=(1<<PD0)|(1<<PD1);//MAKE PD1 AND PD2 AS OUPUT
  da:	83 e0       	ldi	r24, 0x03	; 3
  dc:	8a b9       	out	0x0a, r24	; 10
	pwm_init_tmr1();
  de:	0e 94 5e 00 	call	0xbc	; 0xbc <pwm_init_tmr1>
	adc_init();
  e2:	0e 94 40 00 	call	0x80	; 0x80 <adc_init>
// _delay_ms(500);
// OCR1A=500;
// _delay_ms(500);
	
		int servo_control=(adc_read(0)*3.5);
		OCR1A=servo_control;
  e6:	c8 e8       	ldi	r28, 0x88	; 136
  e8:	d0 e0       	ldi	r29, 0x00	; 0
// OCR1A=375;
// _delay_ms(500);
// OCR1A=500;
// _delay_ms(500);
	
		int servo_control=(adc_read(0)*3.5);
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	0e 94 49 00 	call	0x92	; 0x92 <adc_read>
		OCR1A=servo_control;
  f2:	bc 01       	movw	r22, r24
  f4:	99 0f       	add	r25, r25
  f6:	88 0b       	sbc	r24, r24
  f8:	99 0b       	sbc	r25, r25
  fa:	0e 94 cb 00 	call	0x196	; 0x196 <__floatsisf>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	40 e6       	ldi	r20, 0x60	; 96
 104:	50 e4       	ldi	r21, 0x40	; 64
 106:	0e 94 2f 01 	call	0x25e	; 0x25e <__mulsf3>
 10a:	0e 94 93 00 	call	0x126	; 0x126 <__fixsfsi>
 10e:	79 83       	std	Y+1, r23	; 0x01
 110:	68 83       	st	Y, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	86 e7       	ldi	r24, 0x76	; 118
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <main+0x3e>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0x48>
 122:	00 00       	nop
 124:	e2 cf       	rjmp	.-60     	; 0xea <main+0x10>

00000126 <__fixsfsi>:
 126:	0e 94 9a 00 	call	0x134	; 0x134 <__fixunssfsi>
 12a:	68 94       	set
 12c:	b1 11       	cpse	r27, r1
 12e:	0c 94 29 01 	jmp	0x252	; 0x252 <__fp_szero>
 132:	08 95       	ret

00000134 <__fixunssfsi>:
 134:	0e 94 0e 01 	call	0x21c	; 0x21c <__fp_splitA>
 138:	88 f0       	brcs	.+34     	; 0x15c <__fixunssfsi+0x28>
 13a:	9f 57       	subi	r25, 0x7F	; 127
 13c:	98 f0       	brcs	.+38     	; 0x164 <__fixunssfsi+0x30>
 13e:	b9 2f       	mov	r27, r25
 140:	99 27       	eor	r25, r25
 142:	b7 51       	subi	r27, 0x17	; 23
 144:	b0 f0       	brcs	.+44     	; 0x172 <__fixunssfsi+0x3e>
 146:	e1 f0       	breq	.+56     	; 0x180 <__fixunssfsi+0x4c>
 148:	66 0f       	add	r22, r22
 14a:	77 1f       	adc	r23, r23
 14c:	88 1f       	adc	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	1a f0       	brmi	.+6      	; 0x158 <__fixunssfsi+0x24>
 152:	ba 95       	dec	r27
 154:	c9 f7       	brne	.-14     	; 0x148 <__fixunssfsi+0x14>
 156:	14 c0       	rjmp	.+40     	; 0x180 <__fixunssfsi+0x4c>
 158:	b1 30       	cpi	r27, 0x01	; 1
 15a:	91 f0       	breq	.+36     	; 0x180 <__fixunssfsi+0x4c>
 15c:	0e 94 28 01 	call	0x250	; 0x250 <__fp_zero>
 160:	b1 e0       	ldi	r27, 0x01	; 1
 162:	08 95       	ret
 164:	0c 94 28 01 	jmp	0x250	; 0x250 <__fp_zero>
 168:	67 2f       	mov	r22, r23
 16a:	78 2f       	mov	r23, r24
 16c:	88 27       	eor	r24, r24
 16e:	b8 5f       	subi	r27, 0xF8	; 248
 170:	39 f0       	breq	.+14     	; 0x180 <__fixunssfsi+0x4c>
 172:	b9 3f       	cpi	r27, 0xF9	; 249
 174:	cc f3       	brlt	.-14     	; 0x168 <__fixunssfsi+0x34>
 176:	86 95       	lsr	r24
 178:	77 95       	ror	r23
 17a:	67 95       	ror	r22
 17c:	b3 95       	inc	r27
 17e:	d9 f7       	brne	.-10     	; 0x176 <__fixunssfsi+0x42>
 180:	3e f4       	brtc	.+14     	; 0x190 <__fixunssfsi+0x5c>
 182:	90 95       	com	r25
 184:	80 95       	com	r24
 186:	70 95       	com	r23
 188:	61 95       	neg	r22
 18a:	7f 4f       	sbci	r23, 0xFF	; 255
 18c:	8f 4f       	sbci	r24, 0xFF	; 255
 18e:	9f 4f       	sbci	r25, 0xFF	; 255
 190:	08 95       	ret

00000192 <__floatunsisf>:
 192:	e8 94       	clt
 194:	09 c0       	rjmp	.+18     	; 0x1a8 <__floatsisf+0x12>

00000196 <__floatsisf>:
 196:	97 fb       	bst	r25, 7
 198:	3e f4       	brtc	.+14     	; 0x1a8 <__floatsisf+0x12>
 19a:	90 95       	com	r25
 19c:	80 95       	com	r24
 19e:	70 95       	com	r23
 1a0:	61 95       	neg	r22
 1a2:	7f 4f       	sbci	r23, 0xFF	; 255
 1a4:	8f 4f       	sbci	r24, 0xFF	; 255
 1a6:	9f 4f       	sbci	r25, 0xFF	; 255
 1a8:	99 23       	and	r25, r25
 1aa:	a9 f0       	breq	.+42     	; 0x1d6 <__floatsisf+0x40>
 1ac:	f9 2f       	mov	r31, r25
 1ae:	96 e9       	ldi	r25, 0x96	; 150
 1b0:	bb 27       	eor	r27, r27
 1b2:	93 95       	inc	r25
 1b4:	f6 95       	lsr	r31
 1b6:	87 95       	ror	r24
 1b8:	77 95       	ror	r23
 1ba:	67 95       	ror	r22
 1bc:	b7 95       	ror	r27
 1be:	f1 11       	cpse	r31, r1
 1c0:	f8 cf       	rjmp	.-16     	; 0x1b2 <__floatsisf+0x1c>
 1c2:	fa f4       	brpl	.+62     	; 0x202 <__floatsisf+0x6c>
 1c4:	bb 0f       	add	r27, r27
 1c6:	11 f4       	brne	.+4      	; 0x1cc <__floatsisf+0x36>
 1c8:	60 ff       	sbrs	r22, 0
 1ca:	1b c0       	rjmp	.+54     	; 0x202 <__floatsisf+0x6c>
 1cc:	6f 5f       	subi	r22, 0xFF	; 255
 1ce:	7f 4f       	sbci	r23, 0xFF	; 255
 1d0:	8f 4f       	sbci	r24, 0xFF	; 255
 1d2:	9f 4f       	sbci	r25, 0xFF	; 255
 1d4:	16 c0       	rjmp	.+44     	; 0x202 <__floatsisf+0x6c>
 1d6:	88 23       	and	r24, r24
 1d8:	11 f0       	breq	.+4      	; 0x1de <__floatsisf+0x48>
 1da:	96 e9       	ldi	r25, 0x96	; 150
 1dc:	11 c0       	rjmp	.+34     	; 0x200 <__floatsisf+0x6a>
 1de:	77 23       	and	r23, r23
 1e0:	21 f0       	breq	.+8      	; 0x1ea <__floatsisf+0x54>
 1e2:	9e e8       	ldi	r25, 0x8E	; 142
 1e4:	87 2f       	mov	r24, r23
 1e6:	76 2f       	mov	r23, r22
 1e8:	05 c0       	rjmp	.+10     	; 0x1f4 <__floatsisf+0x5e>
 1ea:	66 23       	and	r22, r22
 1ec:	71 f0       	breq	.+28     	; 0x20a <__floatsisf+0x74>
 1ee:	96 e8       	ldi	r25, 0x86	; 134
 1f0:	86 2f       	mov	r24, r22
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	2a f0       	brmi	.+10     	; 0x202 <__floatsisf+0x6c>
 1f8:	9a 95       	dec	r25
 1fa:	66 0f       	add	r22, r22
 1fc:	77 1f       	adc	r23, r23
 1fe:	88 1f       	adc	r24, r24
 200:	da f7       	brpl	.-10     	; 0x1f8 <__floatsisf+0x62>
 202:	88 0f       	add	r24, r24
 204:	96 95       	lsr	r25
 206:	87 95       	ror	r24
 208:	97 f9       	bld	r25, 7
 20a:	08 95       	ret

0000020c <__fp_split3>:
 20c:	57 fd       	sbrc	r21, 7
 20e:	90 58       	subi	r25, 0x80	; 128
 210:	44 0f       	add	r20, r20
 212:	55 1f       	adc	r21, r21
 214:	59 f0       	breq	.+22     	; 0x22c <__fp_splitA+0x10>
 216:	5f 3f       	cpi	r21, 0xFF	; 255
 218:	71 f0       	breq	.+28     	; 0x236 <__fp_splitA+0x1a>
 21a:	47 95       	ror	r20

0000021c <__fp_splitA>:
 21c:	88 0f       	add	r24, r24
 21e:	97 fb       	bst	r25, 7
 220:	99 1f       	adc	r25, r25
 222:	61 f0       	breq	.+24     	; 0x23c <__fp_splitA+0x20>
 224:	9f 3f       	cpi	r25, 0xFF	; 255
 226:	79 f0       	breq	.+30     	; 0x246 <__fp_splitA+0x2a>
 228:	87 95       	ror	r24
 22a:	08 95       	ret
 22c:	12 16       	cp	r1, r18
 22e:	13 06       	cpc	r1, r19
 230:	14 06       	cpc	r1, r20
 232:	55 1f       	adc	r21, r21
 234:	f2 cf       	rjmp	.-28     	; 0x21a <__fp_split3+0xe>
 236:	46 95       	lsr	r20
 238:	f1 df       	rcall	.-30     	; 0x21c <__fp_splitA>
 23a:	08 c0       	rjmp	.+16     	; 0x24c <__fp_splitA+0x30>
 23c:	16 16       	cp	r1, r22
 23e:	17 06       	cpc	r1, r23
 240:	18 06       	cpc	r1, r24
 242:	99 1f       	adc	r25, r25
 244:	f1 cf       	rjmp	.-30     	; 0x228 <__fp_splitA+0xc>
 246:	86 95       	lsr	r24
 248:	71 05       	cpc	r23, r1
 24a:	61 05       	cpc	r22, r1
 24c:	08 94       	sec
 24e:	08 95       	ret

00000250 <__fp_zero>:
 250:	e8 94       	clt

00000252 <__fp_szero>:
 252:	bb 27       	eor	r27, r27
 254:	66 27       	eor	r22, r22
 256:	77 27       	eor	r23, r23
 258:	cb 01       	movw	r24, r22
 25a:	97 f9       	bld	r25, 7
 25c:	08 95       	ret

0000025e <__mulsf3>:
 25e:	0e 94 42 01 	call	0x284	; 0x284 <__mulsf3x>
 262:	0c 94 b3 01 	jmp	0x366	; 0x366 <__fp_round>
 266:	0e 94 a5 01 	call	0x34a	; 0x34a <__fp_pscA>
 26a:	38 f0       	brcs	.+14     	; 0x27a <__mulsf3+0x1c>
 26c:	0e 94 ac 01 	call	0x358	; 0x358 <__fp_pscB>
 270:	20 f0       	brcs	.+8      	; 0x27a <__mulsf3+0x1c>
 272:	95 23       	and	r25, r21
 274:	11 f0       	breq	.+4      	; 0x27a <__mulsf3+0x1c>
 276:	0c 94 9c 01 	jmp	0x338	; 0x338 <__fp_inf>
 27a:	0c 94 a2 01 	jmp	0x344	; 0x344 <__fp_nan>
 27e:	11 24       	eor	r1, r1
 280:	0c 94 29 01 	jmp	0x252	; 0x252 <__fp_szero>

00000284 <__mulsf3x>:
 284:	0e 94 06 01 	call	0x20c	; 0x20c <__fp_split3>
 288:	70 f3       	brcs	.-36     	; 0x266 <__mulsf3+0x8>

0000028a <__mulsf3_pse>:
 28a:	95 9f       	mul	r25, r21
 28c:	c1 f3       	breq	.-16     	; 0x27e <__mulsf3+0x20>
 28e:	95 0f       	add	r25, r21
 290:	50 e0       	ldi	r21, 0x00	; 0
 292:	55 1f       	adc	r21, r21
 294:	62 9f       	mul	r22, r18
 296:	f0 01       	movw	r30, r0
 298:	72 9f       	mul	r23, r18
 29a:	bb 27       	eor	r27, r27
 29c:	f0 0d       	add	r31, r0
 29e:	b1 1d       	adc	r27, r1
 2a0:	63 9f       	mul	r22, r19
 2a2:	aa 27       	eor	r26, r26
 2a4:	f0 0d       	add	r31, r0
 2a6:	b1 1d       	adc	r27, r1
 2a8:	aa 1f       	adc	r26, r26
 2aa:	64 9f       	mul	r22, r20
 2ac:	66 27       	eor	r22, r22
 2ae:	b0 0d       	add	r27, r0
 2b0:	a1 1d       	adc	r26, r1
 2b2:	66 1f       	adc	r22, r22
 2b4:	82 9f       	mul	r24, r18
 2b6:	22 27       	eor	r18, r18
 2b8:	b0 0d       	add	r27, r0
 2ba:	a1 1d       	adc	r26, r1
 2bc:	62 1f       	adc	r22, r18
 2be:	73 9f       	mul	r23, r19
 2c0:	b0 0d       	add	r27, r0
 2c2:	a1 1d       	adc	r26, r1
 2c4:	62 1f       	adc	r22, r18
 2c6:	83 9f       	mul	r24, r19
 2c8:	a0 0d       	add	r26, r0
 2ca:	61 1d       	adc	r22, r1
 2cc:	22 1f       	adc	r18, r18
 2ce:	74 9f       	mul	r23, r20
 2d0:	33 27       	eor	r19, r19
 2d2:	a0 0d       	add	r26, r0
 2d4:	61 1d       	adc	r22, r1
 2d6:	23 1f       	adc	r18, r19
 2d8:	84 9f       	mul	r24, r20
 2da:	60 0d       	add	r22, r0
 2dc:	21 1d       	adc	r18, r1
 2de:	82 2f       	mov	r24, r18
 2e0:	76 2f       	mov	r23, r22
 2e2:	6a 2f       	mov	r22, r26
 2e4:	11 24       	eor	r1, r1
 2e6:	9f 57       	subi	r25, 0x7F	; 127
 2e8:	50 40       	sbci	r21, 0x00	; 0
 2ea:	9a f0       	brmi	.+38     	; 0x312 <__mulsf3_pse+0x88>
 2ec:	f1 f0       	breq	.+60     	; 0x32a <__mulsf3_pse+0xa0>
 2ee:	88 23       	and	r24, r24
 2f0:	4a f0       	brmi	.+18     	; 0x304 <__mulsf3_pse+0x7a>
 2f2:	ee 0f       	add	r30, r30
 2f4:	ff 1f       	adc	r31, r31
 2f6:	bb 1f       	adc	r27, r27
 2f8:	66 1f       	adc	r22, r22
 2fa:	77 1f       	adc	r23, r23
 2fc:	88 1f       	adc	r24, r24
 2fe:	91 50       	subi	r25, 0x01	; 1
 300:	50 40       	sbci	r21, 0x00	; 0
 302:	a9 f7       	brne	.-22     	; 0x2ee <__mulsf3_pse+0x64>
 304:	9e 3f       	cpi	r25, 0xFE	; 254
 306:	51 05       	cpc	r21, r1
 308:	80 f0       	brcs	.+32     	; 0x32a <__mulsf3_pse+0xa0>
 30a:	0c 94 9c 01 	jmp	0x338	; 0x338 <__fp_inf>
 30e:	0c 94 29 01 	jmp	0x252	; 0x252 <__fp_szero>
 312:	5f 3f       	cpi	r21, 0xFF	; 255
 314:	e4 f3       	brlt	.-8      	; 0x30e <__mulsf3_pse+0x84>
 316:	98 3e       	cpi	r25, 0xE8	; 232
 318:	d4 f3       	brlt	.-12     	; 0x30e <__mulsf3_pse+0x84>
 31a:	86 95       	lsr	r24
 31c:	77 95       	ror	r23
 31e:	67 95       	ror	r22
 320:	b7 95       	ror	r27
 322:	f7 95       	ror	r31
 324:	e7 95       	ror	r30
 326:	9f 5f       	subi	r25, 0xFF	; 255
 328:	c1 f7       	brne	.-16     	; 0x31a <__mulsf3_pse+0x90>
 32a:	fe 2b       	or	r31, r30
 32c:	88 0f       	add	r24, r24
 32e:	91 1d       	adc	r25, r1
 330:	96 95       	lsr	r25
 332:	87 95       	ror	r24
 334:	97 f9       	bld	r25, 7
 336:	08 95       	ret

00000338 <__fp_inf>:
 338:	97 f9       	bld	r25, 7
 33a:	9f 67       	ori	r25, 0x7F	; 127
 33c:	80 e8       	ldi	r24, 0x80	; 128
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	08 95       	ret

00000344 <__fp_nan>:
 344:	9f ef       	ldi	r25, 0xFF	; 255
 346:	80 ec       	ldi	r24, 0xC0	; 192
 348:	08 95       	ret

0000034a <__fp_pscA>:
 34a:	00 24       	eor	r0, r0
 34c:	0a 94       	dec	r0
 34e:	16 16       	cp	r1, r22
 350:	17 06       	cpc	r1, r23
 352:	18 06       	cpc	r1, r24
 354:	09 06       	cpc	r0, r25
 356:	08 95       	ret

00000358 <__fp_pscB>:
 358:	00 24       	eor	r0, r0
 35a:	0a 94       	dec	r0
 35c:	12 16       	cp	r1, r18
 35e:	13 06       	cpc	r1, r19
 360:	14 06       	cpc	r1, r20
 362:	05 06       	cpc	r0, r21
 364:	08 95       	ret

00000366 <__fp_round>:
 366:	09 2e       	mov	r0, r25
 368:	03 94       	inc	r0
 36a:	00 0c       	add	r0, r0
 36c:	11 f4       	brne	.+4      	; 0x372 <__fp_round+0xc>
 36e:	88 23       	and	r24, r24
 370:	52 f0       	brmi	.+20     	; 0x386 <__fp_round+0x20>
 372:	bb 0f       	add	r27, r27
 374:	40 f4       	brcc	.+16     	; 0x386 <__fp_round+0x20>
 376:	bf 2b       	or	r27, r31
 378:	11 f4       	brne	.+4      	; 0x37e <__fp_round+0x18>
 37a:	60 ff       	sbrs	r22, 0
 37c:	04 c0       	rjmp	.+8      	; 0x386 <__fp_round+0x20>
 37e:	6f 5f       	subi	r22, 0xFF	; 255
 380:	7f 4f       	sbci	r23, 0xFF	; 255
 382:	8f 4f       	sbci	r24, 0xFF	; 255
 384:	9f 4f       	sbci	r25, 0xFF	; 255
 386:	08 95       	ret

00000388 <_exit>:
 388:	f8 94       	cli

0000038a <__stop_program>:
 38a:	ff cf       	rjmp	.-2      	; 0x38a <__stop_program>
