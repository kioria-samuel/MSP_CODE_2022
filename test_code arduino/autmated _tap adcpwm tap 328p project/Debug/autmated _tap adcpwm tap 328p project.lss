
autmated _tap adcpwm tap 328p project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000015e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000819  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e0  00000000  00000000  00000a85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000038c  00000000  00000000  00001165  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  000014f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ee  00000000  00000000  00001590  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000193  00000000  00000000  0000197e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001b11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_2>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  78:	0c 94 ad 00 	jmp	0x15a	; 0x15a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <interruptConfig>:
int adc_read(int channel){
	ADMUX|=((0X0F&ADMUX)|channel);//ACTIVATING THE FIRST FOUR CHANNELS
	ADCSRA|=(1<<ADSC);
	while(ADCSRA&(1<<ADIF));//WAIT TILL CO9NVERSION IS COMPLETE
	return ADCW;
}
  80:	88 e0       	ldi	r24, 0x08	; 8
  82:	8a b9       	out	0x0a, r24	; 10
  84:	8b b9       	out	0x0b, r24	; 11
  86:	92 e0       	ldi	r25, 0x02	; 2
  88:	9d bb       	out	0x1d, r25	; 29
  8a:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
  8e:	08 95       	ret

00000090 <__vector_2>:
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	af 93       	push	r26
  a0:	bf 93       	push	r27
  a2:	ef 93       	push	r30
  a4:	ff 93       	push	r31
  a6:	84 ef       	ldi	r24, 0xF4	; 244
  a8:	91 e0       	ldi	r25, 0x01	; 1
  aa:	e8 e8       	ldi	r30, 0x88	; 136
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	91 83       	std	Z+1, r25	; 0x01
  b0:	80 83       	st	Z, r24
  b2:	af e5       	ldi	r26, 0x5F	; 95
  b4:	ba ee       	ldi	r27, 0xEA	; 234
  b6:	11 97       	sbiw	r26, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <__vector_2+0x26>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <__vector_2+0x2c>
  bc:	00 00       	nop
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	89 3f       	cpi	r24, 0xF9	; 249
  c2:	91 05       	cpc	r25, r1
  c4:	a1 f7       	brne	.-24     	; 0xae <__vector_2+0x1e>
  c6:	84 ef       	ldi	r24, 0xF4	; 244
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	ea e8       	ldi	r30, 0x8A	; 138
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	91 83       	std	Z+1, r25	; 0x01
  d0:	80 83       	st	Z, r24
  d2:	af e5       	ldi	r26, 0x5F	; 95
  d4:	ba ee       	ldi	r27, 0xEA	; 234
  d6:	11 97       	sbiw	r26, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <__vector_2+0x46>
  da:	00 c0       	rjmp	.+0      	; 0xdc <__vector_2+0x4c>
  dc:	00 00       	nop
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	89 3f       	cpi	r24, 0xF9	; 249
  e2:	91 05       	cpc	r25, r1
  e4:	a1 f7       	brne	.-24     	; 0xce <__vector_2+0x3e>
  e6:	ff 91       	pop	r31
  e8:	ef 91       	pop	r30
  ea:	bf 91       	pop	r27
  ec:	af 91       	pop	r26
  ee:	9f 91       	pop	r25
  f0:	8f 91       	pop	r24
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	0f 90       	pop	r0
  f8:	1f 90       	pop	r1
  fa:	18 95       	reti

000000fc <adc_init>:
  fc:	87 b1       	in	r24, 0x07	; 7
  fe:	17 b8       	out	0x07, r1	; 7
 100:	80 e4       	ldi	r24, 0x40	; 64
 102:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 106:	8f e8       	ldi	r24, 0x8F	; 143
 108:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 10c:	08 95       	ret

0000010e <pwm_init_tmr1>:
// 	TCCR0B=(1<<CS00);//no prescling
// 	
// }
//PWM INITILAIZE TIMER 1 16 BIT TIMER 
void pwm_init_tmr1(void){
	DDRB=(1<<PB1)|(1<<PB2);//SET OC1A OC1B AS OUTPUT
 10e:	86 e0       	ldi	r24, 0x06	; 6
 110:	84 b9       	out	0x04, r24	; 4
	
	TCCR1A=((1<<WGM11)|(1<<COM1A1));//SET A FAST PWM,TOP IN ICR1,NON-INVERTING MODEclear output on compare match
 112:	82 e8       	ldi	r24, 0x82	; 130
 114:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	/*TCCR1B=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS10);//TOP IN ICR1,CLK/64*/
	TCCR1B=((1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11));//TOP IN ICR1,CLK/64
 118:	8b e1       	ldi	r24, 0x1B	; 27
 11a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	//CALCULATING FPWM---PWM REQUENCY fOCnxPFCPWM
	//FPWM=F(OSC)/(N*(1+TOP)).WHERE N PRESCALER DIVIDER=16000000/(64*(1+)
	//TOP=39999..PS1--319999 PS64-4999 PS256-1249
	/*TCNT1=4499;*/
	TCNT1=0;
 11e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 122:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	
	ICR1=4999;//setting the top count 
 126:	87 e8       	ldi	r24, 0x87	; 135
 128:	93 e1       	ldi	r25, 0x13	; 19
 12a:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 12e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 132:	08 95       	ret

00000134 <main>:
int main(void)
{
	/*pwm_init();*/
	//interrupt coniguration
	
	interruptConfig();
 134:	0e 94 40 00 	call	0x80	; 0x80 <interruptConfig>
	sei();
 138:	78 94       	sei
	pwm_init_tmr1();
 13a:	0e 94 87 00 	call	0x10e	; 0x10e <pwm_init_tmr1>
	adc_init();
 13e:	0e 94 7e 00 	call	0xfc	; 0xfc <adc_init>
// for(int servo=500;servo>=250;servo--){
// 		OCR1A=servo;
// 		_delay_ms(15);
// 	}

OCR1A=500;
 142:	a8 e8       	ldi	r26, 0x88	; 136
 144:	b0 e0       	ldi	r27, 0x00	; 0
 146:	84 ef       	ldi	r24, 0xF4	; 244
 148:	91 e0       	ldi	r25, 0x01	; 1
OCR1B=500;
 14a:	ea e8       	ldi	r30, 0x8A	; 138
 14c:	f0 e0       	ldi	r31, 0x00	; 0
// for(int servo=500;servo>=250;servo--){
// 		OCR1A=servo;
// 		_delay_ms(15);
// 	}

OCR1A=500;
 14e:	11 96       	adiw	r26, 0x01	; 1
 150:	9c 93       	st	X, r25
 152:	8e 93       	st	-X, r24
OCR1B=500;
 154:	91 83       	std	Z+1, r25	; 0x01
 156:	80 83       	st	Z, r24
 158:	fa cf       	rjmp	.-12     	; 0x14e <main+0x1a>

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
